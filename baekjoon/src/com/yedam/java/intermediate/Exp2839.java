package com.yedam.java.intermediate;

import java.util.*;

public class Exp2839 {
	// 제출 완 - 수학적 접근이 필요함..ㅋㅋ
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		// 몇 킬로그램 배달할지
		int N = sc.nextInt();

		// 봉지개수 = n, n/5 = / , n%5 = %
		// N | 3 4 | 5 6 7 8 9 | 10 11 12 13 14 | 15 16 17 18 19|
		// n | 1-1 | 1 2-1 2 3 | .2 .3 .4 .3 .4 | .3 .4 .5 .4 .5|
		// / | -0- | - - 1 - - | -- -- .2 -- -- | -- -- .3 -- --|
		// % | 3 4 | 0 1 2 3 4 | .0 .1 .2 .3 .4 | .0 .1 .2 .3 .4|

		// N | 20 21 22 23 24 | 25 26 27 28 29 | 30 31 32 33 34 |
		// n | .4 .5 .6 .5 .6 | .5 .6 .7 .6 .7 | .6 .7 .8 .7 .8 |
		// / | -- -- .4 -- -- | -- -- .5 -- -- | -- -- .6 -- -- |
		// % | .0 .1 .2 .3 .4 | .0 .1 .2 .3 .4 | .0 .1 .2 .3 .4 |

		// 3과 5의 봉지로만 가능 하니 처음 나누어 지지 않는 값을 찾는다
		// 시작은 3부터 4와 7은 나누어질 수 없다.
		// 6는 3*2 , 8은 5+3 이 될 수있다.
		// 5로 나누거나 나눔값을 구한다
		// 킬로그램 별로 봉지가 몇개 나오는지 우선적으로 구해본다 ( 알고리즘 위해서 )
		// 위 표와 같이 나오는데 잘 보면 패턴이 존재한다.
		// %로 나눌때 값은 총 0~4까지 나오니 이것으로 봉지의 개수를 구해볼 수 있다.
		// 나눔값이 1, 3 ( 홀 수 )일 때는 3kg가 5kg 개수보다 1이 높고
		// 나눔값이 2, 4 ( 짝 수 )일 때는 3kg가 5kg 개수보다 2가 높다
		
		// 위 패턴으로 알고리즘을 짠다.
		// 구해지지 않는 값 4와 7은 -1을 출력
		// 5의 나눔값이 0 이면 5로 나눈 값
		// 5의 나눔값이 1 또는 3일 때는 5로 나눈 뒤 더하기 1
		// 5의 나눔값이 2 또는 4일 때는 5로 나눈 뒤 더하기 2

		if (3 <= N && N <= 5_000) {
			// 3과 5로 나눔 값이 없는 수
			if (N == 4 || N == 7) {
				System.out.println(-1);
			} else if (N % 5 == 0) {
				// 5의 나눔값이 0일때
				System.out.println(N / 5);
			} else if (N % 5 == 1 || N % 5 == 3) {
				// 5의 나눔값이 1 또는 3일때
				System.out.println((N / 5) + 1); // 5로 나눈뒤 1 더하기
			} else if (N % 5 == 2 || N % 5 == 4) {
				// 5의 나눔값이 2 또는 4일때
				System.out.println((N / 5) + 2);// 5로 나눈뒤 2 더하기
			}
		}
	}
}
